Task 8 – Tree Traversals (DFS)
This task demonstrates Depth First Search (DFS) traversals on a binary tree. Three types of traversals are implemented and explained below:
1. Preorder Traversal (Root → Left → Right)
- Visit the root node first.
- Then traverse the left subtree.
- Finally, traverse the right subtree.
2. Inorder Traversal (Left → Root → Right)
- Visit the left subtree first.
- Then visit the root node.
- Finally, traverse the right subtree.
- This traversal is commonly used in Binary Search Trees (BSTs) to retrieve nodes in ascending order.
3. Postorder Traversal (Left → Right → Root)
- Traverse the left subtree first.
- Then traverse the right subtree.
- Finally, visit the root node.
- This traversal is often used for deleting trees or evaluating postfix expressions.
Tree Structure
        1
      /   \
     2     3
    / \   / \
   4   5 6   7

Example Output
Preorder: 1 2 4 5 3 6 7
Inorder: 4 2 5 1 6 3 7
Postorder: 4 5 2 6 7 3 1
